<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.siqisource.stone.datafilter.mapper.DataFilterMapper">

<insert id="insert" parameterType="org.siqisource.stone.datafilter.model.DataFilter" useGeneratedKeys="true" keyProperty="id">
INSERT INTO st_data_filter (

	name ,

	remark 

) VALUES (

	#{name ,jdbcType=VARCHAR} ,

	#{remark ,jdbcType=VARCHAR} 

)
</insert>
	
<insert id="insertBatch" parameterType="java.util.List" >
INSERT INTO st_data_filter  (

	name ,

	remark 

)VALUES
<foreach collection="list" item="item" index="index" separator="," > 
(

#{name ,jdbcType=VARCHAR} ,

#{remark ,jdbcType=VARCHAR} 

)
</foreach>

</insert>

<insert id="insertPartitive" parameterType="map">
	INSERT INTO st_data_filter  
		(${fields._insertFields}) 
	VALUES 
		(${fields._insertValues})
</insert>
	        
<select id="read" parameterType="map" resultType="org.siqisource.stone.datafilter.model.DataFilter">
	SELECT * FROM st_data_filter 	 
	WHERE
	
	id = #{id[0]} 
			
</select>
	  
<select id="count" parameterType="map" resultType="int">
	SELECT count(1) FROM st_data_filter 
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</select>
	  
<select id="list" parameterType="map" resultType="org.siqisource.stone.datafilter.model.DataFilter">
	SELECT * FROM  st_data_filter  
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
	<if test="condition.orderBy != null">
		${condition.orderBy}
	</if>  
</select>
	  
<update id="update" parameterType="org.siqisource.stone.datafilter.model.DataFilter">
	UPDATE st_data_filter SET 
	
	name = #{name ,jdbcType=VARCHAR}  , 
	
	remark = #{remark ,jdbcType=VARCHAR} 
	
	WHERE 
	
	id = #{id ,jdbcType=NUMERIC} 
					
</update>
	
<update id="updatePartitive" parameterType="map" >
	UPDATE st_data_filter 
	SET ${fields._updateSql}
	WHERE 
	
	id = #{id[0]} 
				
</update>
	  
<update id="updateBatch" parameterType="map" >
	UPDATE st_data_filter  
	SET  ${fields._updateSql}
	<if test="condition.expressions != null ">
		<where> ${condition.comboedExpressions} </where>
	</if>		
</update>
		  
<delete id="delete" parameterType="map" >
	DELETE FROM st_data_filter   
	WHERE 
	
	id = #{id[0]} 
	
</delete>
	
<delete id="deleteBatch" parameterType="map" >
	DELETE FROM st_data_filter 
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</delete>

</mapper>
