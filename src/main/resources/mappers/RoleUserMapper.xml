<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.siqisource.stone.role.mapper.RoleUserMapper">

<insert id="insert" parameterType="org.siqisource.stone.role.model.RoleUser"  useGeneratedKeys="true" keyProperty="id">
INSERT INTO st_role_user (
	user_id ,
	role_id 
) VALUES (
	#{userId ,jdbcType=INTEGER },
	#{roleId ,jdbcType=INTEGER }
)
</insert>

<insert id="insert" parameterType="org.siqisource.stone.role.model.RoleUser" databaseId="Oracle" >
<selectKey keyProperty="id" resultType="int" order="BEFORE">
	select  SEQ_st_role_user_id.nextval from dual
</selectKey>
INSERT INTO st_role_user (
	id,
	user_id ,
	role_id 
) VALUES (
	#{id ,jdbcType=NUMERIC },
	#{userId ,jdbcType=INTEGER },
	#{roleId ,jdbcType=INTEGER }
)
</insert>


<insert id="insertPartitive" parameterType="map">
	INSERT INTO st_role_user  
		(${fields._insertFields}) 
	VALUES 
		(${fields._insertValues})
</insert>

<select id="read" parameterType="map" resultType="org.siqisource.stone.role.model.RoleUser">
	SELECT * FROM st_role_user   	 
	WHERE
	id = #{id[0]} 
</select>
	  
<select id="count" parameterType="map" resultType="int">
	SELECT count(1) FROM  st_role_user   
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</select>
	  
<select id="list" parameterType="map" resultType="org.siqisource.stone.role.model.RoleUser">
	SELECT * FROM  st_role_user   
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
	<if test="condition.orderBy != null">
		${condition.orderBy}
	</if>  
</select>

<update id="update" parameterType="org.siqisource.stone.role.model.RoleUser">
	UPDATE st_role_user SET 
	 	user_id = #{userId ,jdbcType=INTEGER } ,
	 	role_id = #{roleId ,jdbcType=INTEGER } 
	WHERE 
	id = #{id,jdbcType=INTEGER} 
</update>
	
<update id="updatePartitive" parameterType="map" >
	UPDATE  st_role_user 
	SET ${fields._updateSql}
	WHERE 
	id = #{id[0]} 
</update>
	  
<update id="updateBatch" parameterType="map" >
	UPDATE  st_role_user   
	SET  ${fields._updateSql}
	<if test="condition.expressions != null ">
		<where> ${condition.comboedExpressions} </where>
	</if>		
</update>

<delete id="delete" parameterType="map" >
	DELETE FROM  st_role_user   
	WHERE 
	id = #{id[0]} 
</delete>
	
<delete id="deleteBatch" parameterType="map" >
	DELETE FROM st_role_user 
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</delete>
	
</mapper>
