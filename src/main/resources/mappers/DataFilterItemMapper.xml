<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.siqisource.stone.datafilter.mapper.DataFilterItemMapper">

<insert id="insert" parameterType="org.siqisource.stone.datafilter.model.DataFilterItem" useGeneratedKeys="true" keyProperty="id">
INSERT INTO st_data_filter_item (

	prefix_code ,

	column_code ,

	compare_symbol ,

	first_value ,

	second_value ,

	suffix_code ,

	data_type ,

	type ,

	sort_no ,

	data_filter_id 

) VALUES (

	#{prefixCode ,jdbcType=VARCHAR} ,

	#{columnCode ,jdbcType=VARCHAR} ,

	#{compareSymbol ,jdbcType=VARCHAR} ,

	#{firstValue ,jdbcType=VARCHAR} ,

	#{secondValue ,jdbcType=VARCHAR} ,

	#{suffixCode ,jdbcType=VARCHAR} ,

	#{dataType ,jdbcType=VARCHAR} ,

	#{type ,jdbcType=VARCHAR} ,

	#{sortNo ,jdbcType=NUMERIC} ,

	#{dataFilterId ,jdbcType=NUMERIC} 

)
</insert>
	
<insert id="insertBatch" parameterType="java.util.List" >
INSERT INTO st_data_filter_item  (

	prefix_code ,

	column_code ,

	compare_symbol ,

	first_value ,

	second_value ,

	suffix_code ,

	data_type ,

	type ,

	sort_no ,

	data_filter_id 

)VALUES
<foreach collection="list" item="item" index="index" separator="," > 
(

#{prefixCode ,jdbcType=VARCHAR} ,

#{columnCode ,jdbcType=VARCHAR} ,

#{compareSymbol ,jdbcType=VARCHAR} ,

#{firstValue ,jdbcType=VARCHAR} ,

#{secondValue ,jdbcType=VARCHAR} ,

#{suffixCode ,jdbcType=VARCHAR} ,

#{dataType ,jdbcType=VARCHAR} ,

#{type ,jdbcType=VARCHAR} ,

#{sortNo ,jdbcType=NUMERIC} ,

#{dataFilterId ,jdbcType=NUMERIC} 

)
</foreach>

</insert>

<insert id="insertPartitive" parameterType="map">
	INSERT INTO st_data_filter_item  
		(${fields._insertFields}) 
	VALUES 
		(${fields._insertValues})
</insert>
	        
<select id="read" parameterType="map" resultType="org.siqisource.stone.datafilter.model.DataFilterItem">
	SELECT * FROM st_data_filter_item 	 
	WHERE
	
	id = #{id[0]} 
			
</select>
	  
<select id="count" parameterType="map" resultType="int">
	SELECT count(1) FROM st_data_filter_item 
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</select>
	  
<select id="list" parameterType="map" resultType="org.siqisource.stone.datafilter.model.DataFilterItem">
	SELECT * FROM  st_data_filter_item  
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
	<if test="condition.orderBy != null">
		${condition.orderBy}
	</if>  
</select>
	  
<update id="update" parameterType="org.siqisource.stone.datafilter.model.DataFilterItem">
	UPDATE st_data_filter_item SET 
	
	prefix_code = #{prefixCode ,jdbcType=VARCHAR}  , 
	
	column_code = #{columnCode ,jdbcType=VARCHAR}  , 
	
	compare_symbol = #{compareSymbol ,jdbcType=VARCHAR}  , 
	
	first_value = #{firstValue ,jdbcType=VARCHAR}  , 
	
	second_value = #{secondValue ,jdbcType=VARCHAR}  , 
	
	suffix_code = #{suffixCode ,jdbcType=VARCHAR}  , 
	
	data_type = #{dataType ,jdbcType=VARCHAR}  , 
	
	type = #{type ,jdbcType=VARCHAR}  , 
	
	sort_no = #{sortNo ,jdbcType=NUMERIC}  , 
	
	data_filter_id = #{dataFilterId ,jdbcType=NUMERIC} 
	
	WHERE 
	
	id = #{id ,jdbcType=NUMERIC} 
					
</update>
	
<update id="updatePartitive" parameterType="map" >
	UPDATE st_data_filter_item 
	SET ${fields._updateSql}
	WHERE 
	
	id = #{id[0]} 
				
</update>
	  
<update id="updateBatch" parameterType="map" >
	UPDATE st_data_filter_item  
	SET  ${fields._updateSql}
	<if test="condition.expressions != null ">
		<where> ${condition.comboedExpressions} </where>
	</if>		
</update>
		  
<delete id="delete" parameterType="map" >
	DELETE FROM st_data_filter_item   
	WHERE 
	
	id = #{id[0]} 
	
</delete>
	
<delete id="deleteBatch" parameterType="map" >
	DELETE FROM st_data_filter_item 
	<if test="condition.expressions != null ">
		<where>${condition.comboedExpressions}</where>
	</if>		
</delete>

</mapper>
